version: "3"
services:
  # CAS Server
  entrada:
    build: ./cas-oauth
    image: apereo/cas-oauth
    # environment:
    #   - VIRTUAL_HOST=entrada.umes
    #   - VIRTUAL_PORT=8080
    ports:
      - "8001:8080"
    volumes:
      - ./cas.properties:/etc/cas/config/cas.properties
    healthcheck:
      test: ["CMD-SHELL", "grep  -rnw '/tmp/logs/' -e 'Ready to process requests'"]
      interval: 5s
      timeout: 5s
      retries: 60

  # Reverse proxy to access different backends
  proxy:
    image: jwilder/nginx-proxy
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - front
      - rrhh
      - pkce
      - apigateway

  # Krakend in front of all APIs
  apigateway:
    image: devopsfaith/krakend:1.4.1
    command: [ "run", "-d", "-c", "/etc/krakend/krakend.json"]
    environment:
      - VIRTUAL_HOST=api.umes
      - VIRTUAL_PORT=8080
      - FC_ENABLE=1
      - FC_SETTINGS=/etc/krakend/settings
      - FC_PARTIALS=/etc/krakend/partials
      - FC_TEMPLATES=/etc/krakend/templates
    volumes:
      - ./krakend/settings:/etc/krakend/settings
      - ./krakend/partials:/etc/krakend/partials
      - ./krakend/templates:/etc/krakend/templates
      - ./krakend/krakend.json:/etc/krakend/krakend.json

  # API Gateway Docs
  apidocs:
    build: ./api-docs
    image: springboot/api-docs
    # ports:
    #   - "8081:8080"
    environment:
      - VIRTUAL_HOST=apidocs.umes
      - VIRTUAL_PORT=8080
    volumes:
      - ./application_apidocs.yml:/app/config/application.yml
    depends_on:
      - api1
      - api2

  # VUEJS FRONTEND APP
  front:
    build: ./oidc-vuejs
    image: vuejs/oidc
    environment:
      - VIRTUAL_HOST=micampus.umes
      - VIRTUAL_PORT=8080
    depends_on:
      entrada:
        condition: service_healthy

  # CLASSIC CAS FILTERED WEBAPP
  rrhh:
    build: ./cas-app
    image: casfilter/cas
    environment:
      - VIRTUAL_HOST=rrhh.umes
      - VIRTUAL_PORT=8080
    depends_on:
      entrada:
        condition: service_healthy
  
  # MODERN WEB APP WITH OIDC-PKCE FLOW
  pkce:
    build: ./oidc-pkce
    image: springboot/oidc-pkce
    environment:
      - VIRTUAL_HOST=pkce.umes
      - VIRTUAL_PORT=8080
    volumes:
      - ./application_pkce.yml:/app/config/application.yml
    depends_on:
     entrada:
        condition: service_healthy

  #
  # ALL THIS APIs ARE HIDE BEHIND KRAKEND
  #
  api1:
    build: ./oidc-api
    image: springboot/oidc-api
    environment:
      - SNAME=api1
      - CASCLIENT=api1
    volumes:
      - ./application_api.yml:/app/config/application.yml
    depends_on:
     entrada:
        condition: service_healthy

  api2:
    build: ./oidc-api
    image: springboot/oidc-api
    environment:
      - SNAME=api2
      - CASCLIENT=api2
    volumes:
      - ./application_api.yml:/app/config/application.yml
    depends_on:
     entrada:
        condition: service_healthy
